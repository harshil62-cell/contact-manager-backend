openapi: 3.0.0
info:
  title: Contact Management API
  description: API for managing users and contacts
  version: 1.0.0

servers:
  - url: http://localhost:5000/api

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      required:
        - username
        - email
        - password
      properties:
        id:
          type: string
        username:
          type: string
          example: harshil
        email:
          type: string
          example: harshil@example.com
        password:
          type: string
          example: yourpassword123
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Contact:
      type: object
      required:
        - name
        - email
        - phone
      properties:
        id:
          type: string
        name:
          type: string
          example: John Doe
        email:
          type: string
          example: john@example.com
        phone:
          type: string
          example: 9876543210
        birthday:
          type: string
          example: 2025-06-27

paths:
  /users/register:
    post:
      tags: [Users]
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        201:
          description: User registered
        400:
          description: Invalid input

  /users/login:
    post:
      tags: [Users]
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Login successful
        401:
          description: Unauthorized

  /users/current:
    get:
      tags: [Users]
      summary: Get current user
      security:
        - bearerAuth: []
      responses:
        200:
          description: User info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          description: Unauthorized

  /contacts:
    get:
      tags: [Contacts]
      summary: Get all contacts
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of contacts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'

    post:
      tags: [Contacts]
      summary: Create a contact
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
      responses:
        201:
          description: Contact created

  /contacts/{id}:
    get:
      tags: [Contacts]
      summary: Get contact by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Contact ID
      responses:
        200:
          description: Contact details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'

    put:
      tags: [Contacts]
      summary: Update contact by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Contact ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
      responses:
        200:
          description: Contact updated

    delete:
      tags: [Contacts]
      summary: Delete contact by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Contact ID
      responses:
        200:
          description: Contact deleted

  /contacts/export:
    get:
      tags: [Contacts]
      summary: Export contacts to CSV
      description: Exports all contacts of the logged-in user as a downloadable `.csv` file.
      security:
        - bearerAuth: []
      responses:
        200:
          description: CSV file containing contacts
          content:
            text/csv:
              schema:
                type: string
                format: binary
        401:
          description: Unauthorized
